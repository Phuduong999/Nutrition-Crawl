var K=Object.defineProperty,B=Object.defineProperties;var j=Object.getOwnPropertyDescriptors;var D=Object.getOwnPropertySymbols;var J=Object.prototype.hasOwnProperty,V=Object.prototype.propertyIsEnumerable;var k=(g,c,d)=>c in g?K(g,c,{enumerable:!0,configurable:!0,writable:!0,value:d}):g[c]=d,I=(g,c)=>{for(var d in c||(c={}))J.call(c,d)&&k(g,d,c[d]);if(D)for(var d of D(c))V.call(c,d)&&k(g,d,c[d]);return g},X=(g,c)=>B(g,j(c));var N=(g,c,d)=>k(g,typeof c!="symbol"?c+"":c,d);var $=(g,c,d)=>new Promise((C,x)=>{var b=f=>{try{l(d.next(f))}catch(m){x(m)}},y=f=>{try{l(d.throw(f))}catch(m){x(m)}},l=f=>f.done?C(f.value):Promise.resolve(f.value).then(b,y);l((d=d.apply(g,c)).next())});(function(){"use strict";const g="nutrition-crawler-highlight",c={XPATH_FIRST_NODE_TYPE:XPathResult.FIRST_ORDERED_NODE_TYPE,XPATH_ORDERED_NODE_SNAPSHOT:XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,CASE_TRANSFORM_REGEX:{UPPERCASE:"ABCDEFGHIJKLMNOPQRSTUVWXYZ",LOWERCASE:"abcdefghijklmnopqrstuvwxyz"},LD_JSON_SELECTOR:'script[type="application/ld+json"]'},d={SCHEMA_TYPE:{NUTRITION_INFORMATION:"NutritionInformation"},NUMBER_REGEX:/[^\d.]/g};function C(e){var o;if(!e)return null;const t=e.match(/\b(\d+(\.\d+)?)\s*(g|mg|gram|grams|milligrams?)/i);if(t&&t[1]){const r=parseFloat(t[1]);return(o=t[3])!=null&&o.toLowerCase().startsWith("m")?isNaN(r)?null:r/1e3:isNaN(r)?null:r}const n=e.match(/\b(\d+(\.\d+)?)(?!\s*%|\s*percent)\s*[a-zA-Z]*/i);if(n&&n[1]){const r=parseFloat(n[1]);return isNaN(r)?null:r}const i=e.replace(d.NUMBER_REGEX," ").trim().split(/\s+/)[0],a=parseFloat(i);return isNaN(a)?null:a}function x(){return window.location.hostname.replace("www.","")}function b(e){return`.//text()[contains(translate(., '${c.CASE_TRANSFORM_REGEX.UPPERCASE}', '${c.CASE_TRANSFORM_REGEX.LOWERCASE}'), '${e.toLowerCase()}')]`}function y(e){return`.//*[contains(@class, '${e}') or contains(@id, '${e}')]`}const l={info:(e,t)=>{console.log(`[INFO] ${e}`,t||"")},error:(e,t)=>{console.error(`[ERROR] ${e}`,t||"")},debug:(e,t)=>{console.debug(`[DEBUG] ${e}`,t||"")}};function f(e,t){if(e){if(!document.getElementById("nutrition-crawler-styles")){const n=document.createElement("style");n.id="nutrition-crawler-styles",n.textContent=`
      .${g} {
        background-color: rgba(255, 255, 0, 0.5) !important;
        border: 1px solid #ff9900 !important;
        transition: background-color 0.3s ease !important;
        box-shadow: 0 0 5px #ff9900 !important;
      }
      .${g}:hover {
        background-color: rgba(255, 255, 0, 0.7) !important;
      }
      .nutrition-crawler-label {
        position: absolute;
        background: #ff9900;
        color: white;
        padding: 2px 5px;
        border-radius: 3px;
        font-size: 12px;
        z-index: 10000;
        box-shadow: 0 1px 3px rgba(0,0,0,0.3);
        pointer-events: none;
      }
    `,document.head.appendChild(n),console.log("[Nutrition Crawler] Highlighting styles loaded successfully")}try{if(e instanceof HTMLElement&&(e.style.setProperty("background-color","rgba(255, 255, 0, 0.5)","important"),e.style.setProperty("border","1px solid #ff9900","important"),e.style.setProperty("box-shadow","0 0 5px #ff9900","important")),e.classList.add(g),console.log(`[Nutrition Crawler] Successfully highlighted element: ${e.tagName}`,e),t){const n=document.createElement("span");n.className="nutrition-crawler-label",n.textContent=t;const i=e.getBoundingClientRect();n.style.top=`${window.scrollY+i.top-20}px`,n.style.left=`${window.scrollX+i.left}px`,n.style.position="absolute",n.style.backgroundColor="#ff9900",n.style.color="white",n.style.padding="2px 5px",n.style.borderRadius="3px",n.style.fontSize="12px",n.style.zIndex="10000",n.style.boxShadow="0 1px 3px rgba(0,0,0,0.3)",document.body.appendChild(n),console.log(`[Nutrition Crawler] Added label: ${t}`),setTimeout(()=>{n.remove()},7e3)}}catch(n){console.error("[Nutrition Crawler] Error applying highlight:",n)}}}function m(e,t="nutritionXPath"){const i={url:window.location.href,xpathType:t,xpathExpression:e,matchCount:0,matches:[]};try{const o=document.evaluate(e,document,null,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue;try{const r=document.evaluate(e,document,null,XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,null);if(r){i.matchCount=r.snapshotLength;const s=Math.min(5,r.snapshotLength);for(let h=0;h<s;h++){const u=r.snapshotItem(h);u&&i.matches.push({index:h,textContent:u.textContent?u.textContent.length>500?u.textContent.substring(0,500)+"...":u.textContent:null,htmlContent:u.outerHTML.length>1e3?u.outerHTML.substring(0,1e3)+"...":u.outerHTML})}}}catch(r){console.warn("Error while trying to log all nodes:",r),o&&(i.matchCount=1,i.matches=[{index:0,textContent:o.textContent?o.textContent.length>500?o.textContent.substring(0,500)+"...":o.textContent:null,htmlContent:o.outerHTML.length>1e3?o.outerHTML.substring(0,1e3)+"...":o.outerHTML}])}return console.log(`XPath (${t}) - Found: ${i.matchCount} matches`),{logResult:i,element:o}}catch(a){return console.error("XPath evaluation failed:",a),i.matchCount=0,{logResult:i,element:null}}}class S{static addLog(t){this.logs.length>=this.maxStorageSize&&this.logs.shift(),this.logs.push(t)}static getLogs(){return[...this.logs]}static clearLogs(){this.logs=[]}static exportLogs(){return JSON.stringify(this.logs,null,2)}}N(S,"logs",[]),N(S,"maxStorageSize",100);const L={calories:null,protein:null,fat:null,carbs:null,fiber:null,sugar:null,added_sugar:null,cholesterol:null,sodium:null,saturated_fat:null,calcium:null,iron:null,amount_per:null},R={"eatthismuch.com":{nutritionXPath:'//*[contains(@class, "facts svelte")]'},"nutritionix.com":{nutritionXPath:'//*[@class="label-container"]',altXPath:'//div[@class="nf"]'},"woolworths.com.au":{nutritionXPath:'//div[contains(@class, "nutritional-info_component_nutritional-info-panel")]',altXPath:'//div[class*="nutritional-info-panel"]'}};class F{canExtract(t){return t.querySelectorAll(c.LD_JSON_SELECTOR).length>0}extract(t){try{const n=t.querySelectorAll(c.LD_JSON_SELECTOR);for(const i of Array.from(n)){const a=i.textContent;if(!a)continue;let o;try{o=JSON.parse(a)}catch(r){continue}if(Array.isArray(o)?o=o.find(r=>r["@type"]===d.SCHEMA_TYPE.NUTRITION_INFORMATION):o["@type"]!==d.SCHEMA_TYPE.NUTRITION_INFORMATION&&(o=this.findNutrition(o)),o&&o["@type"]===d.SCHEMA_TYPE.NUTRITION_INFORMATION){const r=o;l.info("Found schema.org nutrition data",r);const s=X(I({},L),{calories:r.calories||null,protein:r.proteinContent||null,fat:r.fatContent||null,carbs:r.carbohydrateContent||null,fiber:r.fiberContent||null,sugar:r.sugarContent||null,added_sugar:null,cholesterol:r.cholesterolContent||null,sodium:r.sodiumContent||null,saturated_fat:r.saturatedFatContent||null,calcium:null,iron:null,amount_per:r.servingSize||null}),h={};for(const u in s)s[u]!==null&&(h[u]=i);return{data:s,sourceMap:h}}}}catch(n){l.error("Failed to parse schema.org nutrition data",n)}return{data:null,sourceMap:{}}}findNutrition(t){if(t["@type"]===d.SCHEMA_TYPE.NUTRITION_INFORMATION)return t;if(typeof t=="object")for(const n in t){const i=this.findNutrition(t[n]);if(i)return i}return null}}const H={selectors:{protein:["protein"],fat:["total fat","fat"],carbs:["total carbohydrate","carbs"],fiber:["dietary fiber"],sugar:["total sugars","sugar"],added_sugar:["added sugar"],cholesterol:["cholesterol"],sodium:["sodium"],saturated_fat:["saturated fat"],calcium:["calcium"],iron:["iron"],calories:["calories","kcal"]},servingSizeLabels:["serving size","amount per serving","servings per container"]};class z{constructor(t=H){N(this,"config");this.config=t}canExtract(t){return!0}extract(t){const n=I({},L),i={};for(const[a,o]of Object.entries(this.config.selectors))for(const r of o){const s=this.findValue(t,r);if(s.value!==null){n[a]=s.value,i[a]=s.sourceElement;break}}for(const a of this.config.servingSizeLabels){const o=this.findServingSize(t,a);if(o.value){n.amount_per=o.value,i.amount_per=o.sourceElement;break}}return l.info("Extracted HTML-based nutrition data",n),{data:n,sourceMap:i}}findValue(t,n){try{const i=b(n),a=document.evaluate(i,t,null,c.XPATH_ORDERED_NODE_SNAPSHOT,null);for(let s=0;s<a.snapshotLength;s++){const h=a.snapshotItem(s);if(!h)continue;let u=h.parentElement;for(;u;){const p=u.textContent||"",M=C(p);if(M!==null)return l.debug(`Found value ${M} for ${n} in text: "${p}"`),{value:M,sourceElement:u};u=u.parentElement}}const o=y(n),r=document.evaluate(o,t,null,c.XPATH_ORDERED_NODE_SNAPSHOT,null);for(let s=0;s<r.snapshotLength;s++){const h=r.snapshotItem(s);if(!h)continue;const u=C(h.textContent||"");if(u!==null)return l.debug(`Found value ${u} for ${n} in element with class/id`),{value:u,sourceElement:h}}}catch(i){l.error(`Error finding value for ${n}`,i)}return{value:null,sourceElement:null}}findServingSize(t,n){const i=b(n);try{const a=document.evaluate(i,t,null,c.XPATH_ORDERED_NODE_SNAPSHOT,null);for(let o=0;o<a.snapshotLength;o++){const r=a.snapshotItem(o);if(!(r!=null&&r.textContent))continue;const s=r.textContent.trim();if(s){const h=r.parentElement;return{value:s,sourceElement:h}}}}catch(a){l.error(`Error finding serving size for ${n}`,a)}return{value:null,sourceElement:null}}}class U{constructor(t){N(this,"extractors");this.extractors=t||[new F,new z]}extractNutritionInfo(t=!1){const n=x(),i=R[n];if(!i)return l.error("This website is not supported"),{data:null,sourceMap:{}};const a=this.findNutritionElement(i);if(!a)return l.error("Could not find nutrition information on this page"),{data:null,sourceMap:{}};t&&f(a,"Nutrition Data Container");for(const o of this.extractors)if(o.canExtract(a)){const r=o.extract(a);if(r.data)return l.info("Successfully extracted nutrition data using extractor",{extractor:o.constructor.name}),t&&this.highlightExtractedElements(r.sourceMap),r}return l.error("All extractors failed to extract nutrition data"),{data:null,sourceMap:{}}}highlightElements(){const t=x(),n=R[t];if(!n)return l.error("This website is not supported for direct highlighting"),0;const i=this.findNutritionElement(n);if(!i)return l.error("Could not find nutrition information on this page for highlighting"),0;f(i,"Nutrition Data Container");let a=1;for(const o of this.extractors)if(o.canExtract(i)){const r=o.extract(i);if(r.data&&r.sourceMap){this.highlightExtractedElements(r.sourceMap),a+=Object.keys(r.sourceMap).filter(s=>r.sourceMap[s]!==null).length;break}}return a}extractFromTrustedSource(t){const n=R[t];if(!n)return l.error(`Source ${t} not found in trusted sources`),{data:null,sourceMap:{}};const i=n.nutritionXPath;if(!i)return l.error(`No XPath defined for ${t}`),{data:null,sourceMap:{}};let a=null;try{a=m(i).element,!a&&n.altXPath&&(a=m(n.altXPath).element)}catch(o){l.error(`Error evaluating XPath for ${t}`,o)}if(!a)return l.error(`Could not find nutrition element using XPath for ${t}`),{data:null,sourceMap:{}};f(a,`Nutrition Data (${t})`);for(const o of this.extractors)if(o.canExtract(a)){const r=o.extract(a);if(r.data)return l.info(`Successfully extracted nutrition data from ${t} using extractor`,{extractor:o.constructor.name}),this.highlightExtractedElements(r.sourceMap),r}return l.error(`All extractors failed to extract nutrition data from ${t}`),{data:null,sourceMap:{}}}highlightExtractedElements(t){const n={calories:"Calories",protein:"Protein",fat:"Fat",carbs:"Carbohydrates",fiber:"Fiber",sugar:"Sugar",added_sugar:"Added Sugar",cholesterol:"Cholesterol",sodium:"Sodium",saturated_fat:"Saturated Fat",calcium:"Calcium",iron:"Iron",amount_per:"Serving Size"};for(const[i,a]of Object.entries(t))if(a){const o=n[i]||i;f(a,o)}}findNutritionElement(t){const n=m(t.nutritionXPath,"nutritionXPath");S.addLog(n.logResult);let i=n.element;if(!i&&t.altXPath){const a=m(t.altXPath,"altXPath");S.addLog(a.logResult),i=a.element}return l.info("XPath Evaluation Summary:",{url:window.location.href,domain:x(),primaryXPathMatches:n.logResult.matchCount,altXPathMatches:t.altXPath?i&&!n.element?n.logResult.matchCount:0:"No altXPath defined"}),i}}window.nutritionCrawlLoaded=!0,console.log("%c[Nutrition-Crawl]%c Content script đã được tải! Đường dẫn:","background: #2aae53; color: white; font-weight: bold;","color: #2aae53; font-weight: bold;",window.location.href);try{document.documentElement.setAttribute("data-nutrition-crawl-loaded","true"),console.log("[Nutrition-Crawl] Đã thêm marker vào document")}catch(e){console.error("[Nutrition-Crawl] Không thể thêm marker vào document:",e)}new MutationObserver(e=>{e.forEach(t=>{t.type==="attributes"&&t.attributeName==="data-nutrition-crawl-loaded"&&!document.documentElement.hasAttribute("data-nutrition-crawl-loaded")&&(document.documentElement.setAttribute("data-nutrition-crawl-loaded","true"),console.log("[Nutrition-Crawl] Marker đã được thiết lập lại"))})}).observe(document.documentElement,{attributes:!0,attributeFilter:["data-nutrition-crawl-loaded"]});try{chrome.runtime.sendMessage({action:"contentScriptLoaded",url:window.location.href,timestamp:Date.now()},e=>{chrome.runtime.lastError?console.error("Failed to send loaded message:",chrome.runtime.lastError.message):e!=null&&e.success&&console.log("Content script registered successfully")})}catch(e){console.error("Error sending loaded message:",e)}function Y(){return new Promise(e=>{try{chrome.runtime.sendMessage({action:"ping"},t=>{if(chrome.runtime.lastError){console.warn("Connection status check failed:",chrome.runtime.lastError.message),e(!1);return}e(!0)})}catch(t){console.error("Exception during connection check:",t),e(!1)}})}let w=null,E=!0;function v(){!w&&E&&(w=window.setInterval(()=>{if(!E){T();return}try{chrome.runtime.sendMessage({action:"keepAlive",url:window.location.href},e=>{if(chrome.runtime.lastError){const t=chrome.runtime.lastError.message||"";console.warn("KeepAlive failed:",t),(t.includes("Extension context invalidated")||t.includes("context invalidated"))&&(E=!1,T(),console.log("[Nutrition-Crawl] Extension context đã mất hiệu lực, dừng ping"))}})}catch(e){console.error("Exception during keepAlive:",e),e instanceof Error&&e.message.includes("Extension context invalidated")&&(E=!1,T(),console.log("[Nutrition-Crawl] Extension context đã mất hiệu lực, dừng ping"))}},2e4))}function T(){w&&(window.clearInterval(w),w=null)}function O(){return $(this,null,function*(){if(!E){console.log("[Nutrition-Crawl] Extension context không còn hợp lệ, bỏ qua đăng ký lại");return}if(yield Y())console.log("Kết nối đã được thiết lập"),v();else{console.warn("Kết nối không ổn định, thiết lập lại...");try{chrome.runtime.sendMessage({action:"contentScriptLoaded",url:window.location.href,timestamp:Date.now()},e=>{if(chrome.runtime.lastError){const t=chrome.runtime.lastError.message||"";console.warn("Không thể đăng ký lại content script:",t),(t.includes("Extension context invalidated")||t.includes("context invalidated"))&&(E=!1,console.log("[Nutrition-Crawl] Extension context đã mất hiệu lực, dừng các tương tác"))}else e!=null&&e.success&&(console.log("Content script đã được đăng ký lại thành công"),v())})}catch(e){console.error("Lỗi khi đăng ký lại content script:",e),e instanceof Error&&e.message.includes("Extension context invalidated")&&(E=!1,console.log("[Nutrition-Crawl] Extension context đã mất hiệu lực, dừng các tương tác"))}}})}try{chrome.runtime.sendMessage({action:"content_script_loaded",url:window.location.href},e=>{chrome.runtime.lastError?(console.warn("Lỗi khi thông báo background script:",chrome.runtime.lastError.message),setTimeout(O,2e3)):(console.log("Background script đã nhận được thông báo content script đã tải"),v())})}catch(e){console.error("Lỗi khi gửi thông báo:",e),setTimeout(O,2e3)}setTimeout(O,5e3);const P=new U;function A(e=!1){try{return P.extractNutritionInfo(e)}catch(t){return l.error("Unexpected error during nutrition extraction",t),{data:null,sourceMap:{}}}}let _=null;const G=(e,t,n)=>{var i;if(console.log("[Nutrition-Crawl] Received message:",e.action),e.action==="ping")return console.log("[Nutrition-Crawl] Ping received, sending pong"),n({success:!0,pong:!0,timestamp:Date.now()}),!0;switch(e.action){case"extractNutrition":l.info("Starting nutrition extraction...");const a=A(!0);if(l.info("Extraction result:",a),_=a.data,a.data){l.info("Data extracted successfully, creating preview...");const s={url:window.location.href,title:document.title,timestamp:new Date().toISOString(),data:a.data,sourceInfo:{}};for(const[h,u]of Object.entries(a.sourceMap))if(u){l.info(`Processing element for key: ${h}`);const p=u.getBoundingClientRect();s.sourceInfo[h]={tagName:u.tagName,textContent:((i=u.textContent)==null?void 0:i.trim().substring(0,100))||"",position:{top:p.top+window.scrollY,left:p.left+window.scrollX,width:p.width,height:p.height}}}chrome.storage.local.set({nutritionPreview:s},()=>{l.info("Saved nutrition preview data to Chrome storage")})}else l.error("No data extracted from the page");n({success:!!a.data,data:a.data});break;case"highlightNutritionElements":try{const s=P.highlightElements();l.info("Highlighted nutrition elements on page"),n({success:!0,highlighted:s})}catch(s){l.error("Error highlighting nutrition elements",s),n({success:!1,error:`${s}`})}break;case"copyNutritionData":if(_)n({success:!0,data:_});else{const s=A(!1);n({success:!!s.data,data:s.data})}break;case"activateExtraction":const{sourceName:o}=e;let r;o?r=P.extractFromTrustedSource(o):r=A(!0),_=r.data,n({success:!!r.data,data:r.data});break;default:console.log(`[Nutrition-Crawl] Unknown action: ${e.action}`),l.info(`Unknown action received: ${e.action}`),n({success:!1,error:`Không hiểu hành động: ${e.action}`})}return!0};chrome.runtime.onMessage.addListener(G),console.log("%c[Nutrition-Crawl]%c Đã đăng ký listener thành công!","background: #2aae53; color: white; font-weight: bold;","color: #2aae53; font-weight: bold;");try{chrome.runtime.sendMessage({action:"content_script_loaded",url:window.location.href,timestamp:Date.now(),ready:!0},e=>{chrome.runtime.lastError?console.error("[Nutrition-Crawl] Lỗi khi gửi thông báo đã tải:",chrome.runtime.lastError.message):e!=null&&e.success&&console.log("[Nutrition-Crawl] Đã đăng ký thành công với background script")})}catch(e){console.error("[Nutrition-Crawl] Lỗi khi gửi thông báo:",e)}})();
